---
import SearchBar from '../components/SearchBar.astro';
import type { TutorialFile, TutorialSection } from '../types/tutorial';

interface Props {
  sections: TutorialSection[];
  currentFile?: TutorialFile;
}

const { sections, currentFile } = Astro.props;
---

<div class="h-screen flex flex-col lg:pt-0">

  <!-- Header -->
  <div class="flex-shrink-0 p-6 border-b border-dark-border lg:block hidden">
    <div class="flex items-center justify-between mb-4">
      <h1 class="text-xl font-bold">
        <a href="/" class="text-white hover:text-gray-300 transition-colors cursor-pointer !text-white">
          AI Builders Tutorial
        </a>
      </h1>
    </div>
    
    <!-- Search Bar -->
    <SearchBar />
  </div>

  <!-- Mobile Search Bar -->
  <div class="lg:hidden p-3 border-b border-dark-border">
    <SearchBar />
  </div>
  
  <!-- Navigation Content -->
  <div class="flex-1 overflow-y-auto">
    <nav class="p-4 pb-8">
      {sections.map((section) => (
        <div class="mb-6">
          <!-- Section Header -->
          <button 
            class="flex items-center justify-between w-full text-left p-3 sm:p-2 rounded-lg hover:bg-dark-hover transition-colors group"
            data-section={section.path}
            onclick="toggleSection(this)"
          >
            <span class="font-semibold text-dark-text capitalize">
              {section.name}
            </span>
            <svg 
              class="w-5 h-5 sm:w-4 sm:h-4 text-dark-secondary transform transition-transform group-data-[expanded]:rotate-90"
              fill="currentColor" 
              viewBox="0 0 20 20"
            >
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
            </svg>
          </button>
          
          <!-- Section Files -->
          <div 
            class="ml-4 mt-2 space-y-1 section-content" 
            data-section-content={section.path}
            style="display: block;"
          >
            {section.files.map((file) => {
              const isActive = currentFile && currentFile.path === file.path;
              // Remove file extension from path for URL
              const cleanPath = file.path.replace(/\.(md|ipynb)$/, '');
              
              return (
                <a
                  href={`/tutorials/${cleanPath}`}
                  class={`block p-3 sm:p-2 rounded-lg text-sm transition-colors ${
                    isActive 
                      ? 'bg-blue-500/10 text-blue-400 border-l-2 border-blue-400' 
                      : 'text-dark-secondary hover:bg-dark-hover hover:text-dark-text'
                  }`}
                  onclick="closeMobileNav()"
                >
                  <div class="flex items-center">
                    <!-- File Name -->
                    <span class="truncate">
                      {file.metadata.title}
                    </span>
                  </div>
                  
                  <!-- File Description (if available) -->
                  {file.metadata.description && (
                    <div class="mt-1 text-xs text-dark-secondary opacity-75 line-clamp-2">
                      {file.metadata.description}
                    </div>
                  )}
                </a>
              );
            })}
          </div>
        </div>
      ))}
    </nav>
  </div>

  <!-- Logo at Bottom Left -->
  <div class="flex-shrink-0 border-t border-dark-border bg-dark-bg sticky bottom-0">
    <!-- Logo Section with Close Button -->
    <div class="p-4">
      <div class="flex items-center justify-center relative">
        <a 
          href="https://www.theaibuilders.dev/" 
          target="_blank" 
          rel="noopener noreferrer"
          class="block transition-opacity duration-300 hover:opacity-100"
        >
          <img 
            src="/full_logo_white_text_transparent_2.png" 
            alt="AI Builders Tutorial Logo" 
            class="h-14 w-auto opacity-90 hover:opacity-100 transition-opacity duration-300 max-w-full"
            style="min-height: 56px;"
          />
        </a>
        
        <!-- Mobile Close Button -->
        <button
          onclick="closeMobileNav()"
          class="lg:hidden absolute right-0 p-2 rounded-lg hover:bg-dark-hover transition-colors"
          aria-label="Close navigation"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  // Section toggle functionality
  function toggleSection(button: HTMLButtonElement) {
    const sectionPath = button.dataset.section;
    const content = document.querySelector(`[data-section-content="${sectionPath}"]`) as HTMLElement;
    const icon = button.querySelector('svg');
    
    if (content && icon) {
      const isExpanded = content.style.display !== 'none';
      content.style.display = isExpanded ? 'none' : 'block';
      
      if (isExpanded) {
        button.removeAttribute('data-expanded');
        icon.classList.remove('rotate-90');
      } else {
        button.setAttribute('data-expanded', 'true');
        icon.classList.add('rotate-90');
      }
    }
  }
  
  // Make toggleSection available globally
  (window as any).toggleSection = toggleSection;
  
  // Initialize section states
  document.addEventListener('DOMContentLoaded', () => {
    // Expand the section containing the current file
    const currentFileLink = document.querySelector('a[href*="/tutorials/"].bg-blue-500\\/10');
    if (currentFileLink) {
      const section = currentFileLink.closest('.mb-6');
      if (section) {
        const button = section.querySelector('button[data-section]') as HTMLButtonElement;
        const content = section.querySelector('[data-section-content]') as HTMLElement;
        const icon = button?.querySelector('svg');
        
        if (button && content && icon) {
          content.style.display = 'block';
          button.setAttribute('data-expanded', 'true');
          icon.classList.add('rotate-90');
        }
      }
    }
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

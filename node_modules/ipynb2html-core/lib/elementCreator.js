"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const elementCreator = (createElement, classPrefix = 'nb-') => {
    const prefixClassName = (name) => name.startsWith('lang-') ? name : classPrefix + name;
    return (tag, classesOrAttrs, childrenOrHTML) => {
        const el = createElement(tag);
        if (Array.isArray(classesOrAttrs)) {
            el.setAttribute('class', classesOrAttrs.map(prefixClassName).join(' '));
        }
        else if (classesOrAttrs) {
            for (let [key, val] of Object.entries(classesOrAttrs)) {
                if (key === 'class') {
                    val = val.split(' ').map(prefixClassName).join(' ');
                }
                el.setAttribute(key, val);
            }
        }
        if (Array.isArray(childrenOrHTML)) {
            childrenOrHTML.forEach(e => el.appendChild(e));
        }
        else if (childrenOrHTML) {
            el.innerHTML = childrenOrHTML;
        }
        return el;
    };
};
/**
 * Returns a function for building `HTMLElement`s.
 *
 * @param {function} createElement A function that creates a new `HTMLElement`
 *   (e.g. `document.createElement.bind(document)`).
 * @param {string} classPrefix The prefix to be used for all CSS class names
 *   except `lang-*`. Default is `nb-`.
 * @template TElement Type of the element object that *createElement* produces.
 */
exports.default = elementCreator;
//# sourceMappingURL=elementCreator.js.map
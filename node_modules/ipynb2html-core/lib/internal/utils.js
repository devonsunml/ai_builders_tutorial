"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.identity = exports.escapeHTML = exports.CallableInstance = void 0;
const htmlEntities = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
};
/* eslint-disable @typescript-eslint/no-unsafe-assignment,
                  @typescript-eslint/no-unsafe-member-access,
                  @typescript-eslint/ban-types */
exports.CallableInstance = function Callable() {
    const func = this.constructor.prototype.__call__;
    const cls = function (...args) {
        return func.apply(cls, args);
    };
    Object.setPrototypeOf(cls, this.constructor.prototype);
    Object.defineProperties(cls, {
        name: {
            value: this.constructor.name,
            configurable: true,
        },
        length: {
            value: func.length,
            configurable: true,
        },
    });
    return cls;
};
exports.CallableInstance.prototype = Object.create(Function.prototype);
/* eslint-enable @typescript-eslint/no-unsafe-assignment,
                 @typescript-eslint/no-unsafe-member-access,
                 @typescript-eslint/ban-types */
/**
 * Escapes characters with special meaning in HTML with the corresponding
 * HTML entities.
 */
function escapeHTML(str) {
    return str.replace(/[&<>]/g, c => htmlEntities[c]);
}
exports.escapeHTML = escapeHTML;
/**
 * A function that does nothing but return the parameter supplied to it.
 */
exports.identity = (x, ..._rest) => x;
//# sourceMappingURL=utils.js.map